<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>实现图片懒加载的JavaScript函数</title>
    <url>/posts/a8f0cfef.html</url>
    <content><![CDATA[<p>在Web开发中，图片懒加载可以延迟加载页面上的图片，以提高页面加载性能和用户体验。用户在页面加载时不立即加载所有图片，而是等到图片即将进入用户视野时再进行加载。通过延迟加载图片，可以减少初始加载的资源数量，提高页面的加载速度，特别适用于包含大量图片的网页。</p>
<h2 id="定义滚动监听和加载函数："><a href="#定义滚动监听和加载函数：" class="headerlink" title="定义滚动监听和加载函数："></a>定义滚动监听和加载函数：</h2><p>思路：我们定义一个名为runLazyLoad的函数，它通过监听滚动事件实现了图片的懒加载功能。当页面滚动时，函数会计算滚动距离，并根据一定规则加载新的图片。</p>
<p>函数内部的loadLazyLoadedImages函数用于实际加载图片。它首先获取所有带有data-src属性的图片元素，然后逐个加载这些图片，直到达到指定的加载数量。从而达到懒加载效果。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let previousLoadCount = 0;</span><br><span class="line"></span><br><span class="line">function runLazyLoad(origin) &#123;</span><br><span class="line">    loadLazyLoadedImages(origin, 0);</span><br><span class="line">    window.addEventListener(&#x27;scroll&#x27;, function () &#123;</span><br><span class="line">        const scrollDistance = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;</span><br><span class="line">        if (scrollDistance &gt; 0) &#123;</span><br><span class="line">            const initialLoadCount = Math.floor(scrollDistance / 300) * 9 + 9;</span><br><span class="line">            const newLoadCount = initialLoadCount - previousLoadCount;</span><br><span class="line">            if (newLoadCount &gt; 0) &#123;</span><br><span class="line">                loadLazyLoadedImages(newLoadCount);</span><br><span class="line">                previousLoadCount = initialLoadCount;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> <code>Math.floor(scrollDistance / 300) * 9 + 9;</code>: 每滚动300的距离就加载9张图片进来。</p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function loadLazyLoadedImages(count) &#123;</span><br><span class="line">    const lazyImages = document.querySelectorAll(&#x27;[data-src]&#x27;);</span><br><span class="line">    let loadedCount = 0;</span><br><span class="line"></span><br><span class="line">    lazyImages.forEach(img =&gt; &#123;</span><br><span class="line">        if (loadedCount &gt;= count) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        img.style.backgroundImage = `url($&#123;img.getAttribute(&#x27;data-src&#x27;)&#125;)`;</span><br><span class="line">        img.removeAttribute(&#x27;data-src&#x27;);</span><br><span class="line">        loadedCount++;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用:"></a>如何使用:</h2><p>将需要进行懒加载的图片元素添加data-src属性，并将其值设置为对应图片的URL。</p>
<p>html</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img data-src=&quot;path/to/image.webp&quot; alt=&quot;Lazy-loaded Image&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>javascript</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.setAttribute(&#x27;data-src&#x27;, &quot;path/to/image.webp&quot;);</span><br></pre></td></tr></table></figure>

<p>在需要启动的页面，调用runLazyLoad(0); &#x2F;&#x2F;0 为页面默认需要加载的个数，可以根据需要进行调整。</p>
]]></content>
      <categories>
        <category>HTML5</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Midway-Vue3框架使用笔记</title>
    <url>/posts/becb1b11.html</url>
    <content><![CDATA[<h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><p>框架地址: <a href="http://midway-vue3-ssr.liqingsong.cc/"><strong>Midway-Vue3-SSR</strong></a></p>
<p>基于 Midway、Vue 3 组装的 SSR 框架<br>简单、易学易用、方便扩展、集成Midway框架，您一直想要的Vue SSR 框架。</p>
<p>使用系统：Windows</p>
<p>安装:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 克隆项目</span><br><span class="line">git clone https://github.com/lqsong/midway-vue3-ssr.git</span><br><span class="line"></span><br><span class="line"># 进入项目目录</span><br><span class="line">cd midway-vue3-ssr</span><br><span class="line"></span><br><span class="line"># 复制文件</span><br><span class="line">copy src/config/config.default.ts  src/config/config.local.ts # 启用或修改里面的参数</span><br><span class="line">copy src/config/config.default.ts  src/config/config.prod.ts # 启用或修改里面的参数</span><br><span class="line">copy web/.env.development  web/.env.development.local # 启用或修改里面的参数</span><br><span class="line"></span><br><span class="line"># 全局安装pnpm：</span><br><span class="line">npm install pnpm -g</span><br><span class="line"></span><br><span class="line"># 安装环境依赖</span><br><span class="line">pnpm i </span><br><span class="line"></span><br><span class="line"># 启动默认项目</span><br><span class="line">pnpm dev</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p>设置源:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看源</span><br><span class="line">pnpm config get registry </span><br><span class="line"># 切换淘宝源</span><br><span class="line">pnpm config set registry http://registry.npm.taobao.org </span><br></pre></td></tr></table></figure>

<p>pnpm安装好后，有安装yarn的也可以用yarn，不过有的指令用不了</p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>vscode打开克隆下来的项目，ctrl+tab打开终端，前提准备 进入项目目录里后的操作也可也在这里完成。</p>
<h3 id="创建总的文件夹"><a href="#创建总的文件夹" class="headerlink" title="创建总的文件夹"></a>创建总的文件夹</h3><p>初始化后，创建projpath_name文件夹来存放多个工程项目</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建</span><br><span class="line">mkdir projpath_name</span><br><span class="line"># 进入</span><br><span class="line">cd projpath_name</span><br></pre></td></tr></table></figure>
<h3 id="创建工程项目"><a href="#创建工程项目" class="headerlink" title="创建工程项目"></a>创建工程项目</h3><p>然后创建名为aaa的项目，执行以下命令回车：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pnpm create vite aaa --template vue-ts</span><br></pre></td></tr></table></figure>

<p>创建完<code>cd aaa</code>进入工程项目文件夹<code>pnpm i</code>安装项目依赖项，完成后执行<code>pnpm run dev</code>启动项目，</p>
<p>附：<code>cd projpath_name</code>后如果已经创建好了有多个项目可<code>ls查看</code>。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Midway</tag>
      </tags>
  </entry>
  <entry>
    <title>报错日志记录</title>
    <url>/posts/971aed10.html</url>
    <content><![CDATA[<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>在添加<code>openssh</code>成功后,<code>hexo d</code>报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh: Could not resolve hostname github.com: \262\273\326\252\265\300\325\342\321\371\265\304\326\367\273\372\241\243</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: Spawn failed</span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (D:\Hexo\CrfBlog\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">    at ChildProcess.emit (node:events:513:28)</span><br><span class="line">    at ChildProcess.cp.emit (D:\Hexo\CrfBlog\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">    at Process.ChildProcess._handle.onexit (node:internal/child_process:293:12)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>报错时间：2024.03.08</p>
<span id="more"></span>

<p><strong>解决方案</strong></p>
<p>尝试<code>ssh -T git@github.com</code>或用小乌龟推送项目到github，报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git.exe push --progress &quot;private&quot; master:master</span><br><span class="line">kex_exchange_identification: Connection closed by remote host</span><br><span class="line">Connection closed by 140.82.114.3 port 22</span><br><span class="line">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure>
<p>想起来昨天测试openssh时把config文件删除，重新在私钥文件夹<code>~/.ssh/</code>下创建config文件<br>，并添加规则开放443端口：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">    Hostname ssh.github.com</span><br><span class="line">    Port 443</span><br></pre></td></tr></table></figure>

<p>再次测试推送<code>ssh -T git@github.com</code>，输入<code>yes</code>，成功:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">The authenticity of host &#x27;[ssh.github.com]:443 ([140.82.112.35]:443)&#x27; can&#x27;t be established.</span><br><span class="line">ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.</span><br><span class="line">This key is not known by any other names.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;[ssh.github.com]:443&#x27; (ED25519) to the list of known hosts.</span><br><span class="line">Hi Aoce888! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>重新<code>hexo d</code>，问题解决。</p>
<p>归因：误删<code>~/.ssh/</code>下config，导致github配置错误，无法ssh链接到git服务器。</p>
<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>~</p>
]]></content>
      <categories>
        <category>其他技术</category>
      </categories>
      <tags>
        <tag>报错日志</tag>
      </tags>
  </entry>
  <entry>
    <title>windows系统ssh连接服务器(免密+私钥)</title>
    <url>/posts/2dc012bc.html</url>
    <content><![CDATA[<p><strong>准备条件：</strong></p>
<ul>
<li>私钥和公钥</li>
<li>openSSH 服务端和客户端安装</li>
</ul>
<p>安装好openSSH后，在电脑开始搜索框输入关键词<code>PowerShell</code>,找到<code>Windows PowerShell</code>右键以管理身份运行</p>
<p>启用服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net start sshd</span><br></pre></td></tr></table></figure>

<p>添加防火墙开放22端口规则</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">New-NetFirewallRule -Name sshd -DisplayName &#x27;OpenSSH Server (sshd)&#x27; -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<p>查看ssdh现状</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sshd -d</span><br></pre></td></tr></table></figure>

<p>假如需要重启服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Stop-Service sshd</span><br><span class="line">Start-Service sshd</span><br></pre></td></tr></table></figure>

<p>将准备好的公钥上传到服务器：</p>
<p>方式一：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub shirley@192.168.235.22</span><br></pre></td></tr></table></figure>
<p>方式二：将客户端id_rsa.pub中的内容贴到~&#x2F;.ssh&#x2F;authorized_keys 文件末尾</p>
<p>客户端请求链接：<br>(假如我的服务器：192.168.0.0，名字为name)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh name@192.168.0.0</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -vvv name@192.168.0.0</span><br></pre></td></tr></table></figure>
<p>指定私钥名字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -vvv name@192.168.0.0 -i 路径\私钥名字(例如：E:\Users\admin\Desktop\crfbp_id_rsa)</span><br></pre></td></tr></table></figure>

<p>直接yes走到通</p>
<p><em><strong>附：错误记录，链接成功但请求被回拒</strong></em></p>
<p>链接成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">debug3: ssh_connect_direct: entering</span><br><span class="line">debug1: Connecting to 161.117.11.240 [161.117.11.240] port 22.</span><br><span class="line">debug1: Connection established.</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS D:\Bepic_H5\h5-template&gt; ssh -i ~/.ssh/id_rsa qianduan@161.117.11.240</span><br><span class="line">kex_exchange_identification: Connection closed by remote host</span><br><span class="line">Connection closed by 161.117.11.240 port 2</span><br></pre></td></tr></table></figure>
<p>请求回拒链接失败：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS D:\Bepic_H5\h5-template&gt; ssh -vvv qianduan@161.117.11.240</span><br><span class="line">OpenSSH_for_Windows_8.6p1, LibreSSL 3.4.3</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/config error:2</span><br><span class="line">debug3: Failed to open file:C:/ProgramData/ssh/ssh_config error:2</span><br><span class="line">debug2: resolve_canonicalize: hostname 161.117.11.240 is address</span><br><span class="line">debug3: expanded UserKnownHostsFile &#x27;~/.ssh/known_hosts&#x27; -&gt; &#x27;C:\\Users\\admin/.ssh/known_hosts&#x27;</span><br><span class="line">debug3: expanded UserKnownHostsFile &#x27;~/.ssh/known_hosts2&#x27; -&gt; &#x27;C:\\Users\\admin/.ssh/known_hosts2&#x27;</span><br><span class="line">debug1: Authenticator provider $SSH_SK_PROVIDER did not resolve; disabling   </span><br><span class="line">debug3: ssh_connect_direct: entering</span><br><span class="line">debug1: Connecting to 161.117.11.240 [161.117.11.240] port 22.</span><br><span class="line">debug1: Connection established.</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_rsa type 0</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_rsa-cert error:2</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_rsa-cert.pub error:2      </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_rsa-cert error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_rsa-cert type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_dsa error:2</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_dsa.pub error:2</span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_dsa error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_dsa type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_dsa-cert error:2</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_dsa-cert.pub error:2      </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_dsa-cert error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_dsa-cert type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ecdsa error:2</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ecdsa.pub error:2</span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_ecdsa error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_ecdsa type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ecdsa-cert error:2        </span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ecdsa-cert.pub error:2    </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_ecdsa-cert error:2        </span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_ecdsa-cert type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ecdsa_sk error:2</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ecdsa_sk.pub error:2      </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_ecdsa_sk error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_ecdsa_sk type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ecdsa_sk-cert error:2     </span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ecdsa_sk-cert.pub error:2 </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_ecdsa_sk-cert error:2     </span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_ecdsa_sk-cert type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ed25519 error:2</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ed25519.pub error:2       </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_ed25519 error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_ed25519 type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ed25519-cert error:2      </span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ed25519-cert.pub error:2  </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_ed25519-cert error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_ed25519-cert type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ed25519_sk error:2        </span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ed25519_sk.pub error:2    </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_ed25519_sk error:2        </span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_ed25519_sk type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ed25519_sk-cert error:2   </span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_ed25519_sk-cert.pub error:2</span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_ed25519_sk-cert error:2   </span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_ed25519_sk-cert type -1       </span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_xmss error:2</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_xmss.pub error:2</span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_xmss error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_xmss type -1</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_xmss-cert error:2</span><br><span class="line">debug3: Failed to open file:C:/Users/admin/.ssh/id_xmss-cert.pub error:2     </span><br><span class="line">debug3: failed to open file:C:/Users/admin/.ssh/id_xmss-cert error:2</span><br><span class="line">debug1: identity file C:\\Users\\admin/.ssh/id_xmss-cert type -1</span><br><span class="line">debug1: Local version string SSH-2.0-OpenSSH_for_Windows_8.6</span><br><span class="line">kex_exchange_identification: Connection closed by remote host</span><br><span class="line">Connection closed by 161.117.11.240 port 22</span><br></pre></td></tr></table></figure>

<p>几乎找遍了所有问题的可能一直没解决，最后关掉vpn，关掉公司wifi，开启手机热点重启服务，发现公司网络问题。</p>
<p>功夫不负有心人：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Last login: Thu Mar  7 17:24:13 2024 from 223.160.228.62</span><br><span class="line"></span><br><span class="line">Welcome to Alibaba Cloud Elastic Compute Service !</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>【阿里云】添加WebTracking采集html日志</title>
    <url>/posts/1135625f.html</url>
    <content><![CDATA[<p>在html使用阿里云添加WebTracking采集 reffer来访标头</p>
<p>HTTP GET请求</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl --request GET &#x27;http://$&#123;project&#125;.$&#123;host&#125;/logstores/$&#123;logstore&#125;/track?APIVersion=0.6.0&amp;key1=val1&amp;key2=val2&#x27;</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th>是否必填</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>${project}</td>
<td>是</td>
<td>Project名称。</td>
</tr>
<tr>
<td>${host}</td>
<td>是</td>
<td>日志服务所在地域的Endpoint。更多信息，请参见服务入口。</td>
</tr>
<tr>
<td>${logstore}</td>
<td>是</td>
<td>Logstore名称。</td>
</tr>
<tr>
<td>APIVersion&#x3D;0.6.0</td>
<td>是</td>
<td>保留字段。</td>
</tr>
<tr>
<td><strong>topic</strong>&#x3D;yourtopic</td>
<td>否</td>
<td>指定日志主题。</td>
</tr>
<tr>
<td>key1&#x3D;val1&amp;key2&#x3D;val2</td>
<td>是</td>
<td>您要上传到日志服务的键值对（Key-Value），支持设置多个键值对。</td>
</tr>
</tbody></table>
<p>通过上述方式获取日志库请求链接 如 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://$&#123;project&#125;.$&#123;host&#125;/logstores/$&#123;logstore&#125;/track?APIVersion=0.6.0&amp;key1=val1&amp;key2=val2</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<p>以上是请求日志库统计访问次数和reffer的代码，请求链接从上面方式获取</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var count = localStorage.getItem(&#x27;visitCount&#x27;);</span><br><span class="line">if (!count) &#123;</span><br><span class="line">  count = 1;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  count = parseInt(count) + 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">localStorage.setItem(&#x27;visitCount&#x27;, count);</span><br><span class="line"></span><br><span class="line">var valueData = &#123;</span><br><span class="line">  url: window.location.href,</span><br><span class="line">  reffer: window.document.referrer,</span><br><span class="line">  count: count,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var serializedvalueData = JSON.stringify(valueData);</span><br><span class="line"></span><br><span class="line">var logData = &#123;</span><br><span class="line">  &quot;__logs__&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;ev&quot;: &quot;page_catch&quot;,</span><br><span class="line">      &quot;value&quot;: serializedvalueData,</span><br><span class="line">      &quot;clientTs&quot;: Math.floor(Date.now() / 1000).toString(),</span><br><span class="line">      &quot;logIndex&quot;: &quot;0&quot;,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var jsonData = JSON.stringify(logData);</span><br><span class="line"></span><br><span class="line">var request = new XMLHttpRequest();</span><br><span class="line">var url = &#x27;http://$&#123;project&#125;.$&#123;host&#125;/logstores/$&#123;logstore&#125;/track?APIVersion=0.6.0&amp;key1=val1&amp;key2=val2&#x27;</span><br><span class="line"></span><br><span class="line">request.open(&#x27;POST&#x27;, url);</span><br><span class="line">request.setRequestHeader(&quot;x-log-apiversion&quot;, &quot;0.6.0&quot;);</span><br><span class="line">request.setRequestHeader(&quot;x-log-bodyrawsize&quot;, jsonData.length.toString());</span><br><span class="line">request.setRequestHeader(&quot;Content-Type&quot;, &quot;text/plain&quot;);</span><br><span class="line">request.send(jsonData);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>HTML5</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>阿里云</tag>
      </tags>
  </entry>
  <entry>
    <title>添加AdTags注意事项(多平台)</title>
    <url>/posts/a3a5f935.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="0a77f277ea3b4f31d6e48b7ef53ac24cb3590d8969e333c6401688a674152735"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请求密码：</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>HTML5</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>置入广告</tag>
        <tag>AdTags</tag>
      </tags>
  </entry>
  <entry>
    <title>H5通用广告位检测方法</title>
    <url>/posts/fe9370cd.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="77a9032a0227b1b76b743ce91d58b590e23828bf6c13bc5f051da86d25541254"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请求密码：</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>HTML5</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>置入广告</tag>
      </tags>
  </entry>
  <entry>
    <title>关于域名部署与SSL证书</title>
    <url>/posts/c7c874ea.html</url>
    <content><![CDATA[<h2 id="简单的网址部署方式"><a href="#简单的网址部署方式" class="headerlink" title="简单的网址部署方式"></a>简单的网址部署方式</h2><h3 id="选择服务器"><a href="#选择服务器" class="headerlink" title="选择服务器"></a>选择服务器</h3><p>这里我用的是阿里云的轻量服务器，打开阿里云–&gt;搜索<code>轻量服务器</code>–&gt;选择配置(镜像选择宝塔面板)，其他的根据自己需求来，购买成功后打开轻量服务器后台选择就会看到购买的实例，在里面可以登录宝塔面板。</p>
<h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>阿里云申请域名，选择域名解析–&gt;添加记录–&gt;设置主机名(域名备案是必要的，否则会影响网址的正常访问，搜索<code>阿里云搜索ICP备案，有时间都可以提前备好</code>)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主机记录就是域名前缀，常用主机记录及含义如下:</span><br><span class="line">www 表示域名 www.rfcode.top</span><br><span class="line">@ 表示主域名 rfcode.topa</span><br><span class="line">* 泛解析，表示满足格式*rfcodetop 的所有域名(记录类型为“显性URL“时，不允许设置泛解析)</span><br><span class="line">mail 表示域名mail.rfcode.top，常用于邮箱业务的解析设置</span><br><span class="line">m 表示域名 mrfcode.top，常用于手机网站m</span><br><span class="line">二级域名如 abc.rfcode.top ，则填写 abc</span><br><span class="line">多级域名如 ab.cd.ef.rfcode.top ，则填写 ab.cd.ef</span><br></pre></td></tr></table></figure>

<p>—&gt;记录值选择你购买的服务器地址, 确定</p>
<h3 id="部署证书"><a href="#部署证书" class="headerlink" title="部署证书"></a>部署证书</h3><p>登录宝塔面板–&gt;选择左侧栏<code>网站</code>选项–&gt;添加站点–&gt;写上解释时完整的域名(例如：abc.rfcodetop)，点击对应域名的SSL证书下的未部署或是选择–&gt;设置–&gt;SSL证书，然后选择Let’s Encrypt,点击申请证书，等待申请成功保存就可以了(Let’s Encrypt默认续签且免费)</p>
<p>解析域名后，如我的：blog.rfcode.top，然后在宝塔后台创建站点，或者服务器后台添加站点，找到站点根目录root&#x2F;blog.rfcode.top&#x2F;上传资源内容。</p>
<span id="more"></span>

<h2 id="GiteePages绑定域名"><a href="#GiteePages绑定域名" class="headerlink" title="GiteePages绑定域名"></a>GiteePages绑定域名</h2><p>记录下，要用自己的域名绑定GiteePage生成的链接(例如：<a href="https://aoce888.gitee.io/">Crf’s Blog</a>),几乎所有的方法都在解析时隐性url指向该地址或者在<code>cmd</code>通过<code>ping aoce888.gitee.io</code>获取CNAME记录值来解析，但这两个方式都存在缺点。没法用HTTPS协议，因为没法申请SSL证书，会验证失败！</p>
<p>最后我想到的的方式是在<code>blog.rfcode.top</code>根目录创建index.html,套个个iframe嵌入跳转链接，代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Crf’s Blog&lt;/title&gt;</span><br><span class="line">    &lt;meta name=&quot;keywords&quot; content=&quot;Crf’s Blog&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;description&quot; content=&quot;Crf’s Blog&quot;&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        iframe &#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100vh;</span><br><span class="line">            border: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;iframe src=&quot;https://aoce888.gitee.io/&quot; scrolling=&quot;auto&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>其中<code>src=&quot;https://aoce888.gitee.io/&quot;</code>中的链接就是自己GiteePages生成博客的链接，这样可以避免申请证书时验证失败等系列问题。</p>
<p>顺便记录下一开始自己用的一种笨方法哈哈，生成GiteePages的一般项目不是有public目录嘛，例如<code>Hexo博客</code>会在<code>hexo d</code>后把构建文件放在public目录下。直接把这个目录拉到站点根目录root&#x2F;blog.rfcode.top&#x2F;上,ok。</p>
<h2 id="其他相关"><a href="#其他相关" class="headerlink" title="其他相关"></a>其他相关</h2><ul>
<li>Gitee Pages发布的网址用CNAME指定跳转可以通过<code>ping 生成链接的方式</code>获取记录值(IP地址)</li>
</ul>
]]></content>
      <categories>
        <category>服务器相关</category>
      </categories>
      <tags>
        <tag>域名</tag>
        <tag>DNS解析</tag>
      </tags>
  </entry>
  <entry>
    <title>Js动态放置H5广告的方法</title>
    <url>/posts/ca41cf6f.html</url>
    <content><![CDATA[<h2 id="常见广告类型"><a href="#常见广告类型" class="headerlink" title="常见广告类型"></a>常见广告类型</h2><h3 id="ads-txt"><a href="#ads-txt" class="headerlink" title="ads.txt"></a>ads.txt</h3><p>将ads.txt放在发布站点的根目录下，申请广告。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">成功申请，获取可以放置的广告代码如下：</span><br><span class="line"></span><br><span class="line">Here below the TAGs (/head)</span><br><span class="line"></span><br><span class="line">&lt;link rel=&quot;dns-prefetch&quot; href=&quot;//exmarketplace.com&quot;&gt;</span><br><span class="line">&lt;link rel=&quot;preconnect&quot; href=&quot;//cdn.exmarketplace.com&quot;&gt;</span><br><span class="line">&lt;link rel=&quot;preconnect&quot; href=&quot;//securepubads.g.doubleclick.net&quot;&gt;</span><br><span class="line">&lt;script async src=&quot;https://securepubads.g.doubleclick.net/tag/js/gpt.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script async src=&quot;https://cdn.exmarketplace.com/bidder/augovercast/augovercast.dfp.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Here below the DIV (body):</span><br><span class="line">&lt;!--Masterhead--&gt;</span><br><span class="line">&lt;div class=&quot;gptslot&quot; data-adunitid=&quot;0&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--Incontent_1--&gt;</span><br><span class="line">&lt;div class=&quot;gptslot&quot; data-adunitid=&quot;1&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--Incontent_2--&gt;</span><br><span class="line">&lt;div class=&quot;gptslot&quot; data-adunitid=&quot;2&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--Incontent_3--&gt;</span><br><span class="line">&lt;div class=&quot;gptslot&quot; data-adunitid=&quot;3&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--Incontent_4--&gt;</span><br><span class="line">&lt;div class=&quot;gptslot&quot; data-adunitid=&quot;4&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<h3 id="Google-Ad-Manager"><a href="#Google-Ad-Manager" class="headerlink" title="Google Ad Manager"></a>Google Ad Manager</h3><p>这种方式要求每个网页里只能放入一次不同的广告div。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">优化下后需要插入的代码如下：</span><br><span class="line"></span><br><span class="line">&lt;script async src=&quot;https://securepubads.g.doubleclick.net/tag/js/gpt.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">********300x250******</span><br><span class="line">&lt;div id=&quot;be_augdamp_300x250&quot;&gt;</span><br><span class="line"> &lt;script&gt;***&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">********300x250_1******</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;be_augdamp_300x250_1&quot;&gt;</span><br><span class="line">  &lt;script&gt;***&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">********300x250_2*****</span><br><span class="line">&lt;div id=&quot;be_augdamp_300x250_2&quot;&gt;</span><br><span class="line"> &lt;script&gt;***&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">*******336x280*******</span><br><span class="line">&lt;div id=&quot;be_augdamp_336x280&quot;&gt;</span><br><span class="line"> &lt;script&gt;***&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">*******336x280_1*******</span><br><span class="line">&lt;div id=&quot;be_augdamp_336x280_1&quot;&gt;</span><br><span class="line">  &lt;script&gt;***&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">***INTERSTITIAL****     </span><br><span class="line">Header</span><br><span class="line">======</span><br><span class="line">&lt;script&gt;***&lt;/script&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">body</span><br><span class="line">=====</span><br><span class="line">&lt;script&gt;***&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">***********footer_sticky********</span><br><span class="line">Header</span><br><span class="line">=====</span><br><span class="line">&lt;script&gt;***&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">Body</span><br><span class="line">=====</span><br><span class="line">&lt;!-- /21952429235,22902988476/be_augdamp_footer_sticky --&gt;</span><br><span class="line">&lt;div id=&#x27;div-gpt-ad-1692862484432-0&#x27; style=&#x27;min-width: 728px; min-height: 90px;&#x27;&gt;</span><br><span class="line"> &lt;script&gt;***&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h2 id="放置广告的多种情况"><a href="#放置广告的多种情况" class="headerlink" title="放置广告的多种情况"></a>放置广告的多种情况</h2><p>首先想到的是在html文件里直接放入广告代码，但是有时候一个网页里需要多次放入广告且放置位置不好确定。例如现在网页里有个游戏列表，需要你在游戏列表里每隔9个游戏就插入一个广告。这时我们就要用到js来插入像adx.txt的广告代码(暂且不考虑请求方式),用动态生成广告div的方式放置广告则会根据游戏个数生成对应的广告盒子。另一种方式就是延续html文件里直接放入广告代码的方法。提前算好有多少个游戏，需要多少个广告盒。然后根据广告盒子动态插入其他队列。</p>
<h3 id="动态生成广告div"><a href="#动态生成广告div" class="headerlink" title="动态生成广告div"></a>动态生成广告div</h3><p>缺点：需要考虑js脚本的运行顺序，不然会出现生成好没法自己请求广告的情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let ndiv = document.createElement(&#x27;div&#x27;);// 设置类名和数据属性</span><br><span class="line">ndiv.className = &#x27;gptslot&#x27;;</span><br><span class="line">ndiv.setAttribute(&#x27;data-adunitid&#x27;, `$&#123;tag&#125;`); //tag为广告标签 0,1,2,4？看上面的adx.txt插入代码</span><br></pre></td></tr></table></figure>
<p>上面这样就动态生成一个广告了。但是游戏列表总个数不唯一不是？所以下面就要进行遍历处理一下，设一个父div(class为<code>InView</code>,id为<code>inview</code>),该div下放置gamebox和gptslot。<br><img src="/posts/ca41cf6f/a00.png" alt="image-a00"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const batchSize = 9;  //每九个</span><br><span class="line">const list = GAME_DATA.list;  //游戏列表数据</span><br><span class="line">const inviewnode = document.getElementById(&#x27;inview&#x27;) //放置游戏列表和广告gptslot的父节点</span><br><span class="line">for (let i = 0; i &lt; list.length; i += batchSize) &#123;</span><br><span class="line">  // 创建每9个游戏的父容器元素</span><br><span class="line">  let parentDiv = document.createElement(&#x27;div&#x27;);</span><br><span class="line">  parentDiv.id = &#x27;gamebox&#x27; + (i / batchSize);</span><br><span class="line">  parentDiv.className = &#x27;gamebox&#x27;;</span><br><span class="line">  </span><br><span class="line">  //动态插入广告</span><br><span class="line">  let ndiv = document.createElement(&#x27;div&#x27;);// 设置类名和数据属性</span><br><span class="line">  ndiv.className = &#x27;gptslot&#x27;;</span><br><span class="line">  ndiv.setAttribute(&#x27;data-adunitid&#x27;, `$&#123;i % 3&#125;`);</span><br><span class="line"></span><br><span class="line">  inviewnode.appendChild(ndiv);</span><br><span class="line"></span><br><span class="line">  inviewnode.appendChild(parentDiv);</span><br><span class="line"></span><br><span class="line">  // 提取当前批次的元素，使用 slice() 方法</span><br><span class="line">  const batch = list.slice(i, i + batchSize);</span><br><span class="line"></span><br><span class="line">  // 调用buildChildDiv()生成gamebox内容，自定义</span><br><span class="line">  buildChildDiv(batch, parentDiv.id, &quot;productRow&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>附：CSS样式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.gptslot &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.InView &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: auto;</span><br><span class="line">&#125;</span><br><span class="line">.InView .gamebox &#123;</span><br><span class="line">  &lt;!-- 可以自己调整 --&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="根据广告div动态插入其他队列"><a href="#根据广告div动态插入其他队列" class="headerlink" title="根据广告div动态插入其他队列"></a>根据广告div动态插入其他队列</h3><p>缺点：需要提前算需要多少个广告位，需要提前在html里加入广告位置代码。<br>同样设一个父div(class为InView,id为inview),里面放好广告代码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;InView&quot; id=&quot;inview&quot;&gt;</span><br><span class="line">     &lt;div class=&quot;gptslot&quot; data-adunitid=&quot;2&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;div class=&quot;gptslot&quot; data-adunitid=&quot;3&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;div class=&quot;gptslot&quot; data-adunitid=&quot;4&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;div class=&quot;gptslot&quot; data-adunitid=&quot;0&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;div class=&quot;gptslot&quot; data-adunitid=&quot;1&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;div class=&quot;gptslot&quot; data-adunitid=&quot;2&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;div class=&quot;gptslot&quot; data-adunitid=&quot;3&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;!-- ... --&gt;</span><br><span class="line">   &lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>然后获取<code>gptslot</code>的个数，每两个<code>gptslot</code>之间插一个游戏或其他队列。<br><img src="/posts/ca41cf6f/a01.png" alt="image-a01"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const batchSize = 12;  //每12个游戏</span><br><span class="line">const list = GAME_DATA.list;  //游戏列表数据</span><br><span class="line">const inviewnode = document.getElementById(&#x27;inview&#x27;) //放置游戏列表和广告gptslot的父节点</span><br><span class="line">const gptSlots = inviewnode.getElementsByClassName(&#x27;gptslot&#x27;);获取广告div</span><br><span class="line"></span><br><span class="line">let gptIndex = 0; // 游戏盒子队列插入位置的索引</span><br><span class="line"></span><br><span class="line">for (let i = 0; i &lt; list.length; i += batchSize) &#123;</span><br><span class="line">  const batch = list.slice(i, i + batchSize);</span><br><span class="line">  // 创建父容器元素</span><br><span class="line">  let parentDiv = document.createElement(&#x27;div&#x27;);</span><br><span class="line">  parentDiv.id = &#x27;gamebox&#x27; + (i / batchSize + 1);</span><br><span class="line">  parentDiv.className = &#x27;gamebox&#x27;;</span><br><span class="line"></span><br><span class="line">  if (gptIndex &lt; gptSlots.length) &#123;</span><br><span class="line">    // 插入游戏盒子队列到&lt;div class=&quot;gptslot&quot; data-adunitid=&quot;&quot;&gt;&lt;/div&gt;之后</span><br><span class="line">    inviewnode.insertBefore(parentDiv, gptSlots[gptIndex].nextSibling);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    // 如果gptSlots不足，将父容器元素插入到末尾</span><br><span class="line">    inviewnode.appendChild(parentDiv);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 调用buildChildDiv()生成id为gamebox(i / batchSize + 1)内容，自定义</span><br><span class="line">  buildChildDiv(batch, parentDiv.id, &quot;chlid&quot;);</span><br><span class="line">  gptIndex++; // 更新游戏盒子队列插入位置的索引</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>HTML5</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>Ads</tag>
        <tag>置入广告</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下ossutil安装及常见错误解决方法</title>
    <url>/posts/badd29d6.html</url>
    <content><![CDATA[<h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p>选择官方给的<a href="https://help.aliyun.com/document_detail/120075.html?spm=a2c4g.50452.0.0.36386a9b86ukKs#concept-303829">【安装ossutil】</a>方法，对应自己的电脑配置选择Windows环境下版本，下载后进行根据提示分别设置<strong>Endpoint、AccessKey ID、AccessKey Secret和STSToken</strong>参数。这里主要对报错解决方案进行一个记录，因为自己在网上一直没有找到解决办法。</p>
<h2 id="错误解决方案"><a href="#错误解决方案" class="headerlink" title="错误解决方案"></a>错误解决方案</h2><h3 id="报错1"><a href="#报错1" class="headerlink" title="报错1"></a>报错1</h3><p><code>ossutil:command not found</code></p>
<span id="more"></span>
<p>解决办法，在下载安装包解压配置后，将几个文件拷贝到项目路径下，在重新执行ossutil指令</p>
<p>安装包文件如下：<br><img src="/posts/badd29d6/00.png" alt="image-00"></p>
<p>拷贝到文件目录下：<br><img src="/posts/badd29d6/01.png" alt="image-01"></p>
]]></content>
      <categories>
        <category>其他技术</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>ossutil</tag>
      </tags>
  </entry>
  <entry>
    <title>html部分css样式修改方法</title>
    <url>/posts/13206192.html</url>
    <content><![CDATA[<h2 id="基础知识点"><a href="#基础知识点" class="headerlink" title="基础知识点"></a>基础知识点</h2><h3 id="横竖屏样式适配"><a href="#横竖屏样式适配" class="headerlink" title="横竖屏样式适配"></a>横竖屏样式适配</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@charset &quot;utf-8&quot;;</span><br><span class="line">body&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">@media screen and (max-width:480px) &#123;</span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>html中编写，其中name为类名，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;name&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>更改样式时在css里加上<code>.name &#123;&#125;</code>在括号里修改样式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@charset &quot;utf-8&quot;;</span><br><span class="line">body&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.name &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="样式注意事项"><a href="#样式注意事项" class="headerlink" title="样式注意事项"></a>样式注意事项</h2><h3 id="图片裁剪居中div"><a href="#图片裁剪居中div" class="headerlink" title="图片裁剪居中div"></a>图片裁剪居中div</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">img &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  object-fit: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="div背景图片裁剪居中"><a href="#div背景图片裁剪居中" class="headerlink" title="div背景图片裁剪居中"></a>div背景图片裁剪居中</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">background-position: center;</span><br><span class="line">background-size: cover;</span><br></pre></td></tr></table></figure>

<h3 id="背景图片模糊"><a href="#背景图片模糊" class="headerlink" title="背景图片模糊"></a>背景图片模糊</h3><p>需要模糊的设置绝对位置，不需要的设置相对位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> .playbox &#123;</span><br><span class="line">    width: 96%;</span><br><span class="line">    height: 240px;</span><br><span class="line">    margin: 2%;</span><br><span class="line">&#125;</span><br><span class="line">/*模糊背景*/</span><br><span class="line">.playbox .bg &#123;</span><br><span class="line">    float: left;</span><br><span class="line">    height: 240px;</span><br><span class="line">    width: 350px;</span><br><span class="line"></span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-position: center;</span><br><span class="line">    background-size: cover;</span><br><span class="line"></span><br><span class="line">    -webkit-filter: blur(3px);</span><br><span class="line">    -moz-filter: blur(3px);</span><br><span class="line">    -o-filter: blur(3px);</span><br><span class="line">    -ms-filter: blur(3px);</span><br><span class="line">    filter: blur(3px);</span><br><span class="line">    position: absolute;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.playbox .content &#123;</span><br><span class="line">    width: 350px;</span><br><span class="line">    height: 240px;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line">		</span><br></pre></td></tr></table></figure>
<h3 id="div描边框"><a href="#div描边框" class="headerlink" title="div描边框"></a>div描边框</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">border-width: 1px;</span><br><span class="line">border-color: black;</span><br><span class="line">border-style: dashed; </span><br></pre></td></tr></table></figure>
<h3 id="字体描边"><a href="#字体描边" class="headerlink" title="字体描边"></a>字体描边</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-webkit-text-stroke: 0.02em rgb(0, 0, 0);</span><br></pre></td></tr></table></figure>
<h3 id="div内文字水平垂直居中"><a href="#div内文字水平垂直居中" class="headerlink" title="div内文字水平垂直居中"></a>div内文字水平垂直居中</h3><p><code>水平text-align: center</code>和<code>垂直line-height = height</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">width: 80%;</span><br><span class="line">height: 30px;</span><br><span class="line">line-height:30px;</span><br><span class="line">text-align: center;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>HTML5</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>CSS样式</tag>
      </tags>
  </entry>
  <entry>
    <title>html读取js脚本批量加载图片及超链接</title>
    <url>/posts/4441eb1c.html</url>
    <content><![CDATA[<p>思路： 编写脚本文件–&gt;html引入–&gt;创建div来获取显示图片并添加点击事件</p>
<h2 id="引入js脚本"><a href="#引入js脚本" class="headerlink" title="引入js脚本"></a>引入js脚本</h2><p>在html文件<code>&lt;head&gt; &lt;/head&gt;</code>中间引入脚本路径,如下<code>..index.js</code>为脚本文件路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;..index.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>在需要加载图片及超链接的<code>&lt;div&gt;</code>处加上id,例如下面我给<code>gamebox</code>加上<code>game_list</code>的id</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div class=&quot;gamebox&quot; id = &#x27;game_list&#x27;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="编写脚本文件"><a href="#编写脚本文件" class="headerlink" title="编写脚本文件"></a>编写脚本文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var GAME_LIST = [</span><br><span class="line">  &#123;</span><br><span class="line">    name: &quot;2048CubeWinner&quot;,</span><br><span class="line">    url: &quot;https://cdn.bepicgames.com/h5/game/2048CubeWinner/index.html&quot;,</span><br><span class="line">    logo: &quot;https://cdn.bepicgames.com/h5/game/2048CubeWinner/logo.png&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: &quot;AlphabetDop&quot;,</span><br><span class="line">    url: &quot;https://cdn.bepicgames.com/h5/game/AlphabetDop/index.html&quot;,</span><br><span class="line">    logo: &quot;https://cdn.bepicgames.com/h5/game/AlphabetDop/logo.png&quot;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">var gameListDom = document.getElementById(&#x27;game_list&#x27;);</span><br><span class="line">// console.log(gameListDom);确保获取id对象不为空</span><br><span class="line"></span><br><span class="line">//divDom.className = &quot;productRow&quot; 是css中定义好的样式id名 进行优化样式处理</span><br><span class="line">for (var i = 0; i &lt; GAME_LIST.length; i++) &#123;</span><br><span class="line">	var imageDom = document.createElement(&#x27;img&#x27;);</span><br><span class="line">	imageDom.src = GAME_LIST[i].logo;</span><br><span class="line">	console.log(&#x27;Link&#x27; + i + &#x27;:&#x27; + GAME_LIST[i].logo);</span><br><span class="line">	var divDom = document.createElement(&#x27;div&#x27;);</span><br><span class="line">	divDom.className = &quot;productRow&quot;</span><br><span class="line">	divDom.appendChild(imageDom);</span><br><span class="line">	let dd = &#x27;&#x27; + GAME_LIST[i].url</span><br><span class="line">	divDom.onclick = function()&#123;</span><br><span class="line">		window.location = dd</span><br><span class="line">	&#125;</span><br><span class="line">	gameListDom.appendChild(divDom);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="html跳转链接时传递参数"><a href="#html跳转链接时传递参数" class="headerlink" title="html跳转链接时传递参数"></a>html跳转链接时传递参数</h2><p>传递参数 <code>a=1</code><br><code>window.location.href = new.html?a=1</code><br>接受参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">// 获取url中的参数</span><br><span class="line">			function getUrlParam(name) &#123;</span><br><span class="line">				var reg = new RegExp(&quot;(^|&amp;)&quot; + name + &quot;=([^&amp;]*)(&amp;|$)&quot;);</span><br><span class="line">				var r = window.location.search.substr(1).match(reg);</span><br><span class="line">				if (r != null) &#123;</span><br><span class="line">					return unescape(r[2]);</span><br><span class="line">				&#125; else &#123;</span><br><span class="line">					return null;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">      let a = getUrlParam(&#x27;a&#x27;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>HTML5</category>
      </categories>
      <tags>
        <tag>HTML5</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Git配置仓库公钥及使用</title>
    <url>/posts/a983e6df.html</url>
    <content><![CDATA[<h2 id="Git配置仓库公钥"><a href="#Git配置仓库公钥" class="headerlink" title="Git配置仓库公钥"></a>Git配置仓库公钥</h2><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>打开<a href="https://git-scm.com/downloads">《Git工具下载地址》</a>,下载并完成安装</p>
<span id="more"></span>
<h3 id="获取远程仓库地址SSH"><a href="#获取远程仓库地址SSH" class="headerlink" title="获取远程仓库地址SSH"></a>获取远程仓库地址SSH</h3><p>这里如果是Gitee可以看<a href="bd5b3fbb">《Hexo搭建笔记》</a>里的<strong>Gitee部署</strong>的<strong>创建仓库</strong> 章节,最终获取SSH地址 <a href="mailto:&#103;&#105;&#116;&#64;&#x67;&#x69;&#116;&#101;&#x65;&#x2e;&#x63;&#111;&#x6d;">&#103;&#105;&#116;&#64;&#x67;&#x69;&#116;&#101;&#x65;&#x2e;&#x63;&#111;&#x6d;</a>:name&#x2F;仓库名.git，如在<strong>创建仓库</strong> 章节里最终获取地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git@gitee.com:Aoce888/Aoce888.git</span><br></pre></td></tr></table></figure>

<p>其他也都大同小异如阿里云：在阿里云创建项目，获取SSH地址 ***.git（示例地址，每个项目SSH地址不同）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">最终获取地址：**git@code.aliyun.com:playale/*.git**</span><br></pre></td></tr></table></figure>
<h3 id="配置仓库公钥"><a href="#配置仓库公钥" class="headerlink" title="配置仓库公钥"></a>配置仓库公钥</h3><p>在安装好git后，在本地创建一个与云仓库共同名称（示例文件夹名 nameA），右键进行库配置操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">右键nameA--&gt;git bash here 进行全局配置用户信息操作</span><br><span class="line">git config --global user.name &quot;username&quot;  配置用户名</span><br><span class="line">git config --global user.email useremail@qq.com 配置邮箱</span><br></pre></td></tr></table></figure>

<p>用户信息配好后获取公钥：</p>
<ul>
<li>(方法一) 输入ssh-keygen -t rsa -C “<a href="mailto:&#117;&#115;&#x65;&#x72;&#101;&#109;&#x61;&#105;&#x6c;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;">&#117;&#115;&#x65;&#x72;&#101;&#109;&#x61;&#105;&#x6c;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a>“  （这里的邮箱是你配置用户的邮箱，回车全部按enter）；</li>
</ul>
<p>操作完成后SSH密钥默默认储存在帐户的主目录下的 ~&#x2F;.ssh</p>
<ul>
<li>(方法二) 这里提供个更简捷的方法，在上面新建的nameA文件夹 右键–&gt;git  GUI here</li>
</ul>
<p>在窗口上找到help–&gt;show SSHkey –&gt;Copy</p>
<p><img src="/posts/a983e6df/a00.png" alt="image-a00"></p>
<p>这样我们就获取了密钥了，下一步就是在创建仓库用户设置上配置我们的Copy公钥<br>打开<a href="https://gitee.com/">Gitee官网</a> 登录后 首页找到 用户–&gt;设置–&gt;SSH公钥–&gt;增加公钥，把上一个步骤copy的密钥填入</p>
<p>到这一步基本就是完成了，最后一步本地配置链接仓库，nameA右键–&gt;git bash here输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin SSH地址</span><br><span class="line">git remote add origin git@gitee.com:Aoce888/Aoce888.git  (示例1)</span><br><span class="line">git remote add origin git@code.aliyun.com:playale/nameA.git  (示例2)</span><br></pre></td></tr></table></figure>

<p>这样就可以通过指令从仓库获取内容和提交信息了</p>
<h3 id="Git-bash创建文件指令"><a href="#Git-bash创建文件指令" class="headerlink" title="Git bash创建文件指令"></a>Git bash创建文件指令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim name.file 创建或打开文件 i进入 esc退出后 :wq保存</span><br><span class="line">git add name.file 添加文件 git status查看信息 git commit -m&#x27;添加修改信息&#x27;</span><br><span class="line">git vm old.file new.file 重命名格式</span><br><span class="line">修改备注 git commit --amend 按a进入编辑模式</span><br></pre></td></tr></table></figure>



<h3 id="上传某个文件夹到指定分支"><a href="#上传某个文件夹到指定分支" class="headerlink" title="上传某个文件夹到指定分支"></a>上传某个文件夹到指定分支</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、Git init （在本地工程目录下），生成.git 文件夹</span><br><span class="line"></span><br><span class="line">2、上传修改的文件 git add *(*可替换成具体要上传的文件名，*表示提交所有有变化的文件) </span><br><span class="line"></span><br><span class="line">3、添加上传文件的描述</span><br><span class="line">git commit -m &quot;test&quot; （”test“为分支名）</span><br><span class="line"></span><br><span class="line">4、（创建分支）git branch test</span><br><span class="line"></span><br><span class="line">5、（切换分支）git checkout test</span><br><span class="line"></span><br><span class="line">6、与远程分支相关联  git remote add origin @@@@.git</span><br><span class="line"></span><br><span class="line">7、（将分支上传）git push origin test</span><br></pre></td></tr></table></figure>



<h3 id="推送失败解决方案"><a href="#推送失败解决方案" class="headerlink" title="推送失败解决方案"></a>推送失败解决方案</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、git pull -- rebase</span><br><span class="line">//针对场景一和二，养成先pull最新代码再修改的习惯即可</span><br><span class="line">//在修改本地代码前，先使用git pull拉取远程最新代码，然后再进行修改（推荐--rebase）</span><br><span class="line">git pull 远程仓库名 远程分支名 --rebase</span><br><span class="line"></span><br><span class="line">2、git push --force</span><br><span class="line">//针对场景三，在确认代码无误的情况下，直接使用--force强制推送</span><br><span class="line">git push 远程仓库名 远程分支名 --force</span><br></pre></td></tr></table></figure>

<h3 id="其他相关问题"><a href="#其他相关问题" class="headerlink" title="其他相关问题"></a>其他相关问题</h3><h4 id="git-commit报错"><a href="#git-commit报错" class="headerlink" title="git commit报错"></a>git commit报错</h4><p>报错内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fatal: Unable to create &#x27;xxx/.git/index:File exists.</span><br><span class="line">Another git process seems to be running in this repository, e.g. an editor opened by ‘git commit’. Please make sure all processes are terminated then try again. If it still fails, a git process may have crashed in this repository earlier:remove the file manually to continue.</span><br></pre></td></tr></table></figure>

<p>解决方案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">删除在同级目录下 .git 文件中的 index.lock 文件;</span><br><span class="line">或者直接在命令行输入 rm -f .git/index.lock</span><br></pre></td></tr></table></figure>

<h4 id="git-push-origin-master报错"><a href="#git-push-origin-master报错" class="headerlink" title="git push origin master报错"></a>git push origin master报错</h4><p>报错内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hint: Updates were rejected because the remote contains work that you do</span><br><span class="line">hint: not have locally. This is usually caused by another repository pushing</span><br><span class="line">hint: to the same ref. You may want to first integrate the remote changes</span><br><span class="line">hint: (e.g., &#x27;git pull ...&#x27;) before pushing again.</span><br><span class="line">hint: See the &#x27;Note about fast-forwards&#x27; in &#x27;git push --help&#x27; for details.</span><br></pre></td></tr></table></figure>

<p>解决方案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方式一：输入“ `git pull --rebase origin master` ” ，然后输入git push origin master语句</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方式二：输入“ git pull origin master --allow-unrelated-histories ”（会弹到文件里面，输入“:wq”退出该文件，如果没有遇到，请忽略），然后输入git push origin master语句</span><br><span class="line"></span><br><span class="line">前两种方式不可行的情况下，试试这种方法：“git push -f origin master”</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其他技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>公钥</tag>
      </tags>
  </entry>
  <entry>
    <title>CocosCreator3.x发射瞄准线</title>
    <url>/posts/ddf07759.html</url>
    <content><![CDATA[<p>小球瞄准线在2D小游戏开发中是常用的功能，找了好久发现网上都是CocosCreator2.x相关的教程,如白玉无冰老师的<a href="https://blog.csdn.net/weixin_45686592/article/details/103567500">《反复横跳的瞄准线！…》</a>、<a href="https://blog.csdn.net/m0_63275099/article/details/121316113">《creator 反复横跳瞄准线的实现》From飞猪001</a>，刚好第一份实习时有个3.x项目需要小球瞄准功能，但是当时由于3.x更新了系列2.x的API一直没弄懂做不出来，今天解决了就做个记录（这里要特别感谢键兴哥哥的指导）。</p>
<p>基本准备： 创建2D项目&#x3D;&#x3D;&gt;新建场景&#x3D;&#x3D;&gt;设置项目的设计宽高：宽540高960</p>
<ul>
<li>在Canvas画布下创建Sprite节点名称为touch_node和Graphics节点名为graphic_line</li>
<li>新建脚本Test.ts挂到Canvas节点上,复制以下下代码(保存Canvas节点上找到Test组件挂上touch_node和graphic_line节点):</li>
<li><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import &#123; _decorator, BoxCollider2D, Component, EPhysics2DDrawFlags, ERaycast2DType, ERigidBody2DType, Node, PhysicsSystem2D, RigidBody2D, UITransform, Vec2, Vec3, RigidBody, Graphics &#125; from &#x27;cc&#x27;;</span><br><span class="line">const &#123; ccclass, property &#125; = _decorator;</span><br><span class="line"></span><br><span class="line">@ccclass(&#x27;Test&#x27;)</span><br><span class="line">export class Test extends Component &#123;</span><br><span class="line"></span><br><span class="line">    line_height = 2000</span><br><span class="line">    @property(Graphics)</span><br><span class="line">    graphic_line: Graphics = null</span><br><span class="line"></span><br><span class="line">    @property(Node)</span><br><span class="line">    private touch_node: Node = null;</span><br><span class="line"></span><br><span class="line">    protected onLoad(): void &#123;</span><br><span class="line">        PhysicsSystem2D.instance.enable = true;</span><br><span class="line">        PhysicsSystem2D.instance.debugDrawFlags = EPhysics2DDrawFlags.Aabb |</span><br><span class="line">            EPhysics2DDrawFlags.Pair |</span><br><span class="line">            EPhysics2DDrawFlags.CenterOfMass |</span><br><span class="line">            EPhysics2DDrawFlags.Joint |</span><br><span class="line">            EPhysics2DDrawFlags.Shape;</span><br><span class="line"></span><br><span class="line">        this.initModule()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected start(): void &#123;</span><br><span class="line">        this.touch_node.on(Node.EventType.TOUCH_START, (event) =&gt; &#123;</span><br><span class="line">            console.log(&#x27;true&#x27;)</span><br><span class="line">            this.resetLine(event.getLocation())</span><br><span class="line">        &#125;, this)</span><br><span class="line">        this.touch_node.on(Node.EventType.TOUCH_MOVE, (event) =&gt; &#123;</span><br><span class="line">            this.resetLine(event.getLocation())</span><br><span class="line">        &#125;, this)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    update(deltaTime: number) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">  * 刷新线</span><br><span class="line">  * @param touch_point </span><br><span class="line">  */</span><br><span class="line">    resetLine(touch_point: Vec2) &#123;</span><br><span class="line">        this.graphic_line.clear();</span><br><span class="line">        let temp = this.graphic_line.node.getComponent(UITransform).convertToWorldSpaceAR(Vec3.ZERO);</span><br><span class="line">        let start_point = new Vec2(temp.x, temp.y)</span><br><span class="line"></span><br><span class="line">        let sub_vec = new Vec2(Vec2.ZERO)</span><br><span class="line">        Vec2.subtract(sub_vec, touch_point, start_point)</span><br><span class="line">        // let sub_vec = touch_point.sub(start_point);</span><br><span class="line"></span><br><span class="line">        let end_point = new Vec2(Vec2.ZERO)</span><br><span class="line">        let a = new Vec2(Vec2.ZERO);</span><br><span class="line">        Vec2.divide(a, sub_vec, new Vec2(Vec2.len(sub_vec), Vec2.len(sub_vec)))</span><br><span class="line">        let b = new Vec2()</span><br><span class="line">        Vec2.multiplyScalar(b, a, this.line_height)</span><br><span class="line">        end_point = b.add(start_point)</span><br><span class="line">        // let end_point = sub_vec.div(sub_vec.mag()).mul(this.line_height).add(start_point);</span><br><span class="line">        this.physicalRayCast(start_point, end_point, this.line_height);</span><br><span class="line"></span><br><span class="line">        this.graphic_line.stroke();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">         * 射线检查</span><br><span class="line">         * @param p1 </span><br><span class="line">         * @param p2 </span><br><span class="line">         * @param line_mag </span><br><span class="line">         */</span><br><span class="line">    physicalRayCast(p1: Vec2, p2: Vec2, line_mag: number) &#123;</span><br><span class="line">        //射线检测</span><br><span class="line">        var results = PhysicsSystem2D.instance.raycast(p1, p2,</span><br><span class="line">            ERaycast2DType.Closest)[0];</span><br><span class="line">        let sub_vec: Vec2 = new Vec2();</span><br><span class="line">        if (results) &#123;</span><br><span class="line">            Vec2.subtract(sub_vec, results.point, p1)</span><br><span class="line">            // sub_vec = results.point.sub(p1);</span><br><span class="line">            //计算长度</span><br><span class="line">            let draw_mag = Vec2.len(sub_vec);</span><br><span class="line">            //得到入射向量单位</span><br><span class="line">            Vec2.divide(sub_vec, sub_vec, new Vec2(draw_mag, draw_mag));</span><br><span class="line">            if (line_mag - draw_mag &gt; 0) &#123;</span><br><span class="line">                let temp = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(p1.x, p1.y, 0))</span><br><span class="line">                this.drawLine(new Vec2(temp.x, temp.y), sub_vec, draw_mag);</span><br><span class="line">                //法向量</span><br><span class="line">                p1 = results.point;</span><br><span class="line">                //反射法向量</span><br><span class="line">                let mul = new Vec2()</span><br><span class="line">                Vec2.multiply(mul, results.normal, new Vec2(2 * sub_vec.dot(results.normal), 2 * sub_vec.dot(results.normal)))</span><br><span class="line">                Vec2.subtract(p2, sub_vec, mul)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                // p2 = sub_vec.sub(results.normal.mul(2*sub_vec.dot(results.normal)));</span><br><span class="line">                p2.multiply(new Vec2(line_mag - draw_mag, line_mag - draw_mag))</span><br><span class="line">                // p2.mul(line_mag - draw_mag, p2);</span><br><span class="line">                //反射点</span><br><span class="line">                p2.add(p1)</span><br><span class="line">                this.physicalRayCast(p1, p2, line_mag - draw_mag);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                let temp = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(p1.x, p1.y, 0))</span><br><span class="line">                this.drawLine(new Vec2(temp.x, temp.y), sub_vec, line_mag);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Vec2.subtract(sub_vec, p2, p1)</span><br><span class="line">            // sub_vec = p2.sub(p1);</span><br><span class="line">            let draw_mag = Vec2.len(sub_vec);</span><br><span class="line">            Vec2.divide(sub_vec, sub_vec, new Vec2(draw_mag, draw_mag));</span><br><span class="line">            // sub_vec.divSelf(sub_vec.mag());</span><br><span class="line"></span><br><span class="line">            let temp = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(p1.x, p1.y, 0))</span><br><span class="line">            this.drawLine(new Vec2(temp.x, temp.y), sub_vec, line_mag);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 画线</span><br><span class="line">     * @param start_point </span><br><span class="line">     * @param sub_vec </span><br><span class="line">     * @param line_mag </span><br><span class="line">     */</span><br><span class="line">    drawLine(start_point: Vec2, sub_vec: Vec2, line_mag: number) &#123;</span><br><span class="line">        let a = new Vec2()</span><br><span class="line">        Vec2.multiplyScalar(a, sub_vec, 20)</span><br><span class="line">        let end_point = new Vec2()</span><br><span class="line">        Vec2.add(end_point, start_point, a)</span><br><span class="line">        this.graphic_line.moveTo(start_point.x, start_point.y);</span><br><span class="line">        this.graphic_line.lineTo(end_point.x, end_point.y);</span><br><span class="line">        line_mag -= 30;</span><br><span class="line">        if (line_mag &gt; 0) &#123;</span><br><span class="line">            let t = new Vec2()</span><br><span class="line">            Vec2.multiplyScalar(t, sub_vec, 10)</span><br><span class="line">            this.drawLine(end_point.add(t), sub_vec, line_mag);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    initModule() &#123;</span><br><span class="line">        let width = this.node.getComponent(UITransform).width</span><br><span class="line">        let height = this.node.getComponent(UITransform).height;</span><br><span class="line"></span><br><span class="line">        let node = new Node();</span><br><span class="line"></span><br><span class="line">        let body = node.addComponent(RigidBody2D);</span><br><span class="line">        body.type = ERigidBody2DType.Static;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        this._addBound(node, 0, height / 2, width, 20);</span><br><span class="line">        this._addBound(node, 0, -height / 2, width, 20);</span><br><span class="line">        this._addBound(node, -width / 2, 0, 20, height);</span><br><span class="line">        this._addBound(node, width / 2, 0, 20, height);</span><br><span class="line"></span><br><span class="line">        node.parent = this.node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    _addBound(node, x, y, width, height) &#123;</span><br><span class="line">        let collider = node.addComponent(BoxCollider2D); //PhysicsBoxCollider</span><br><span class="line">        collider.offset.x = x;</span><br><span class="line">        collider.offset.y = y;</span><br><span class="line">        collider.size.width = width;</span><br><span class="line">        collider.size.height = height;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<p>这样一条基本的反复横跳瞄准线就完成了，当触摸touch_node时瞄准线就会随着手指的移动而发生变化。在自己的项目中也可以对这条线进行系列美化。具体后面会放在后面的升级代码中。</p>
]]></content>
      <categories>
        <category>CocosCreator</category>
      </categories>
      <tags>
        <tag>Cocos Creator</tag>
        <tag>3.x</tag>
        <tag>TypeScript</tag>
        <tag>游戏引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>CocosCreator升级3.x进阶API</title>
    <url>/posts/2e201bd.html</url>
    <content><![CDATA[<h2 id="乘积运算"><a href="#乘积运算" class="headerlink" title="乘积运算"></a>乘积运算</h2><p>在CocosCreator升级3.x版本后，对2.x的一些乘积运算API进行了改动，在3.x乘积运算使用了静态方法，以下是一些写法上的差异：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//向量相减</span><br><span class="line">p1.sub(p2) ==&gt; let newtag = new Vec2(Vec2.ZERO)</span><br><span class="line">        Vec2.subtract(newtag, p1, p2); p1 = newtag</span><br><span class="line"></span><br><span class="line">计算向量长度</span><br><span class="line">nv2.mag() ==&gt; Vec2.len(nv2)</span><br><span class="line"></span><br><span class="line">//向量除法</span><br><span class="line">let a = p1.divide(p2.mag());==&gt;let a= new Vec2(Vec2.Zero);  Vec2.divide(a,p1,new Vec2(Vec2.len(p2),Vec2.len(p2)))</span><br><span class="line"></span><br><span class="line">//缩放向量</span><br><span class="line">p1.mul(10) ==&gt;let a= new Vec2(Vec2.Zero);   Vec2.multiplyScalar(a,p1,10); //p1 = a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//向量加法</span><br><span class="line">p1.addSelf(v2) ==&gt; let a= new Vec2(Vec2.Zero); Vec2.add(a, p1,v2);</span><br><span class="line">     </span><br></pre></td></tr></table></figure>
<span id="more"></span>]]></content>
      <categories>
        <category>CocosCreator</category>
      </categories>
      <tags>
        <tag>Cocos Creator</tag>
        <tag>3.x</tag>
        <tag>TypeScript</tag>
        <tag>游戏引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo写作必备技能</title>
    <url>/posts/d4c9a351.html</url>
    <content><![CDATA[<h2 id="创建文章与删除"><a href="#创建文章与删除" class="headerlink" title="创建文章与删除"></a>创建文章与删除</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建文章：</span><br><span class="line">    hexo new &quot;文章title&quot;</span><br><span class="line">删除文章：</span><br><span class="line">    hexo remove &quot;文章title&quot;</span><br></pre></td></tr></table></figure>
<h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>首先是修改配置,在根目录下的_config.yml文件中找到post_asset_folder: false替换为如下配置，保存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">  prependRoot: true</span><br><span class="line">  postAsset: true</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>更改好配置后，当用<code>·hexo new &quot;文章title&quot;</code>创建新文章时，会在文章存储目录_posts下生成一个与文章名相同的文件夹，把图片a.jpg放文件夹中，在需要插入图片处使用md插入图片写法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![&#x27;图片描述&#x27;](a.jpg)</span><br></pre></td></tr></table></figure>
<p>这样<code>hexo g</code>解析后，<code>hexo s</code>和<code>hexo d</code>后预览，想要在vsCode侧边栏预览还有typora还得扩展其他方法，目前还没找到合适的</p>
<h2 id="生成永久文章链接"><a href="#生成永久文章链接" class="headerlink" title="生成永久文章链接"></a>生成永久文章链接</h2><p>安装Hexo-abbrlink插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure>
<p>修改根目录站点配置文件_config.yml,找到<code>permalink:</code>处修改以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">permalink: posts/:abbrlink.html     # 将原来文章的地址修改为这个</span><br><span class="line"> </span><br><span class="line"># 并添加如下配置：</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32      #support crc16(default) and crc32</span><br><span class="line">  rep: hex        #support dec(default) and hex</span><br><span class="line">  drafts: false   #(true)Process draft,(false)Do not process draft. false(default) </span><br><span class="line">  # Generate categories from directory-tree</span><br><span class="line">  # depth: the max_depth of directory-tree you want to generate, should &gt; 0</span><br><span class="line">  auto_category:</span><br><span class="line">     enable: true  #true(default)</span><br><span class="line">     depth:        #3(default)</span><br><span class="line">     over_write: false </span><br><span class="line">  auto_title: false #enable auto title, it can auto fill the title by path</span><br><span class="line">  auto_date: false #enable auto date, it can auto fill the date by time today</span><br><span class="line">  force: false #enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink. This only updates abbrlink rather than other front variables.</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br></pre></td></tr></table></figure>
<p>进行<code>hexo clean</code>后<code>hexo g</code>会自动在你的文章内容头标签加上<code>abbrlink: aaaa</code>(aaaa代表随机代码)，复制aaaa,在需要使用的地方插入<code>aaaa</code>，插入后<code>hexo g</code>永久链接会在文章末尾显示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://name.gitee.io/posts/aaaa/</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
        <tag>必备技能</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo主题美化</title>
    <url>/posts/c28eec2f.html</url>
    <content><![CDATA[<h2 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h2><h3 id="去掉强力驱动"><a href="#去掉强力驱动" class="headerlink" title="去掉强力驱动"></a>去掉强力驱动</h3><p>找到主题文件夹下layout&#x2F;partials&#x2F;footer.njk，将其包含的的以下代码注释掉或删除：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.footer.powered %&#125;</span><br><span class="line">&lt;div class=&quot;powered-by&quot;&gt;&#123;# #&#125;&#123;&#123; __(&#x27;footer.powered&#x27;, &#x27;&lt;a class=&quot;theme-link&quot; target=&quot;_blank&quot; href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;&#x27;) &#125;&#125;&#123;# #&#125;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>新版的可以尝试下，在主题配置文件搜索<code>powered</code><br>如果关键词存在，设置为如下即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Powered by Hexo &amp; NexT</span><br><span class="line">powered: false</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<h3 id="创建菜单栏页面"><a href="#创建菜单栏页面" class="headerlink" title="创建菜单栏页面"></a>创建菜单栏页面</h3><p>菜单显示对应标签，在主题配置文件_configy.yml找到menu关键词去掉需要显示的标签注释,默认只显示home，如下我们就是把about标签的注释去掉了:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">home: / || fa fa-home</span><br><span class="line">about: /about/ || fa fa-user</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>创建相关标签页面，这里以about页面为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure>
<p>打开引擎对页面进行修改</p>
<h3 id="添加访问量"><a href="#添加访问量" class="headerlink" title="添加访问量"></a>添加访问量</h3><p>1.更改主题配置 _config.yml假如有映射文件则是_config.next.yml,找到 busuanzi_count 参数 enable改为true</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">busuanzi_count: enable: true</span><br></pre></td></tr></table></figure>
<p>2.找到主题文件夹下 layout&#x2F;partials&#x2F;footer.njk 文件，在末尾div同级位置加上如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;powered-by&quot;&gt;</span><br><span class="line">  &lt;i class=&quot;fa fa-user-md&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class="line">    本站访问量:&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">  &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line">    本站总访客量：&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="网站运行时长"><a href="#网站运行时长" class="headerlink" title="网站运行时长"></a>网站运行时长</h3><p>找到主题文件夹下 layout&#x2F;partials&#x2F;footer.njk 文件，在末尾div同级位置加上如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date(); </span><br><span class="line">    function createtime() &#123; </span><br><span class="line">        var grt= new Date(&quot;08/10/2020 00:00:00&quot;);//在此处修改你的建站时间</span><br><span class="line">        now.setTime(now.getTime()+250); </span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); </span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); </span><br><span class="line">        if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); </span><br><span class="line">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125; </span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span><br><span class="line">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125; </span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;已运行 &quot;+dnum+&quot; 天 &quot;; </span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="增添样式"><a href="#增添样式" class="headerlink" title="增添样式"></a>增添样式</h2><h3 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h3><p>这里我用的是next主题。打开主题映射文件_config.next.yml，找到<code>toc:</code>修改为如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Table of Contents in the Sidebar</span><br><span class="line"># Front-matter variable (nonsupport wrap expand_all).</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line">  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.</span><br><span class="line">  expand_all: false</span><br><span class="line">  # Maximum heading depth of generated toc.</span><br><span class="line">  max_depth: 6</span><br></pre></td></tr></table></figure>
<p>  附：next主题侧边栏Next中文目录单击不跳转问题解决方案<br>  报错：<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Uncaught TypeError: Cannot read properties of null (reading &#x27;getBoundingClientRect&#x27;)</span><br><span class="line">at HTMLAnchorElement.&lt;anonymous&gt; (utils.js:302:31)</span><br></pre></td></tr></table></figure><br>  打开next主题文件夹，找到next\source\js\ <code>utils.js</code>,搜索registerSidebarTOC函数，更改为<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  registerSidebarTOC: function () &#123;</span><br><span class="line">  const navItems = document.querySelectorAll(&#x27;.post-toc li&#x27;);</span><br><span class="line">  const sections = [...navItems].map(element =&gt; &#123;</span><br><span class="line">    var link = element.querySelector(&#x27;a.nav-link&#x27;);</span><br><span class="line">    var target = document.getElementById(decodeURI(link.getAttribute(&#x27;href&#x27;)).replace(&#x27;#&#x27;, &#x27;&#x27;));</span><br><span class="line">    // TOC item animation navigate.</span><br><span class="line">    link.addEventListener(&#x27;click&#x27;, event =&gt; &#123;</span><br><span class="line">      event.preventDefault();</span><br><span class="line">      //var target = document.getElementById(event.currentTarget.getAttribute(&#x27;href&#x27;).replace(&#x27;#&#x27;, &#x27;&#x27;));</span><br><span class="line">      var offset = target.getBoundingClientRect().top + window.scrollY;</span><br><span class="line">      window.anime(&#123;</span><br><span class="line">        targets: document.scrollingElement,</span><br><span class="line">        duration: 500,</span><br><span class="line">        easing: &#x27;linear&#x27;,</span><br><span class="line">        scrollTop: offset + 10</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    //return document.getElementById(link.getAttribute(&#x27;href&#x27;).replace(&#x27;#&#x27;, &#x27;&#x27;));</span><br><span class="line">    return target;</span><br><span class="line">  &#125;);</span><br><span class="line">  this.updateActiveNav();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p>
<h3 id="侧边栏图标修改"><a href="#侧边栏图标修改" class="headerlink" title="侧边栏图标修改"></a>侧边栏图标修改</h3><p>以添加csdn图标为例子,首先在<a href="https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a">iconfont官网</a>搜索自己喜欢的图标，点击下载，选择svg文件(48<em>48或64</em>64规格就够了)<br><img src="/posts/c28eec2f/iconfont_csdn.jpg" alt="iconfont_csdn"><br>将图片保存在根目录文件下\source\css\images路径下，注意不是next主题文件夹。如果没有根据路径文件夹请自行创建(主题不同存放路径会不同，像我用的next8.16版本\source\images会报错..\css\images文件不存在)。<br>然后在根目录\source\ _data路径下新建styles.styl文件添加如下代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* sidebar social icon */</span><br><span class="line">.csdn &#123;</span><br><span class="line">  background-image: url(&#x27;/images/icon.svg&#x27;); //icon.svg是下载保存下载的文件</span><br><span class="line">  background-size: 1em 1em;</span><br><span class="line">  opacity: 0.55;</span><br><span class="line">  background-position: 0.05rem 0.2rem;</span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  height: 1rem;</span><br><span class="line">  width: 1rem; </span><br><span class="line">  border-radius: 0rem;</span><br><span class="line">  /*鼠标停留在图标上时，图标呈现发光效果*/</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">      opacity: 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>修改主题文件夹配置 _config.yml文件 假如有映射文件则是根目录下_config.next.yml,找到 custom_file_path 把 style: source&#x2F;_data&#x2F;styles.styl是否已取消注释，没有的话把注释去掉</p>
<p>最后应用图标,打开主题文件夹配置文件,找到social:处添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  CSDN: https://yourcsdn.com || fa csdn </span><br><span class="line">  # GitHub: https://github.com/yourname || fab fa-github  </span><br></pre></td></tr></table></figure>

<h4 id="侧边栏链接样式"><a href="#侧边栏链接样式" class="headerlink" title="侧边栏链接样式"></a>侧边栏链接样式</h4><p>修改侧边栏链接为当前窗口打开，搜索主题目录下关键词<code>next-url.js</code>，找到<code>next-url.js</code>，在该脚本下搜索<code>_blank</code>改为<code>_self</code></p>
<h3 id="修改鼠标"><a href="#修改鼠标" class="headerlink" title="修改鼠标"></a>修改鼠标</h3><h4 id="更换鼠标样式"><a href="#更换鼠标样式" class="headerlink" title="更换鼠标样式"></a>更换鼠标样式</h4><p>修改主题文件夹配置 _config.yml文件 假如有映射文件则是根目录下_config.next.yml,找到 custom_file_path 把 style: source&#x2F;_data&#x2F;styles.styl前面注释去掉<br>在主题文件夹目录下source_data\styles.styl(没有就创建_data文件夹和styles.styl文件，要求与注释路径一致)添加如下代码即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*鼠标样式*/</span><br><span class="line">* &#123;</span><br><span class="line">  cursor: url(/images/Arrow.cur),auto;</span><br><span class="line">&#125;</span><br><span class="line">:active &#123;</span><br><span class="line">  // cursor: url(/images/Hand.cur),auto</span><br><span class="line">&#125;</span><br><span class="line">:link &#123;</span><br><span class="line">  cursor: url(/images/Hand.cur),auto</span><br><span class="line">&#125;</span><br><span class="line">// 鼠标样式补充</span><br><span class="line">a, span.exturl &#123;</span><br><span class="line">	cursor: url(/images/Hand.cur),auto</span><br><span class="line">&#125;</span><br><span class="line">.posts-expand .post-meta time &#123;</span><br><span class="line">	cursor: url(/images/Hand.cur),auto</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="添加鼠标移动效果"><a href="#添加鼠标移动效果" class="headerlink" title="添加鼠标移动效果"></a>添加鼠标移动效果</h4><p>在主题文件夹目录下source\js\中新建ColorfulCursor.js文件，并添加以下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(function ColorfulCursor() &#123;</span><br><span class="line">  </span><br><span class="line">    var possibleColors = [&quot;#D61C59&quot;, &quot;#E7D84B&quot;, &quot;#1B8798&quot;]</span><br><span class="line">    var width = window.innerWidth;</span><br><span class="line">    var height = window.innerHeight;</span><br><span class="line">    var cursor = &#123;x: width/2, y: width/2&#125;;</span><br><span class="line">    var particles = [];</span><br><span class="line">    </span><br><span class="line">    function init() &#123;</span><br><span class="line">      bindEvents();</span><br><span class="line">      loop();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    // Bind events that are needed</span><br><span class="line">    function bindEvents() &#123;</span><br><span class="line">      document.addEventListener(&#x27;mousemove&#x27;, onMouseMove);</span><br><span class="line">      document.addEventListener(&#x27;touchmove&#x27;, onTouchMove);</span><br><span class="line">      document.addEventListener(&#x27;touchstart&#x27;, onTouchMove);</span><br><span class="line">      </span><br><span class="line">      window.addEventListener(&#x27;resize&#x27;, onWindowResize);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function onWindowResize(e) &#123;</span><br><span class="line">      width = window.innerWidth;</span><br><span class="line">      height = window.innerHeight;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function onTouchMove(e) &#123;</span><br><span class="line">      if( e.touches.length &gt; 0 ) &#123;</span><br><span class="line">        for( var i = 0; i &lt; e.touches.length; i++ ) &#123;</span><br><span class="line">          addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[Math.floor(Math.random()*possibleColors.length)]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function onMouseMove(e) &#123;    </span><br><span class="line">      cursor.x = e.clientX;</span><br><span class="line">      cursor.y = e.clientY;</span><br><span class="line">      </span><br><span class="line">      addParticle( cursor.x, cursor.y, possibleColors[Math.floor(Math.random()*possibleColors.length)]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function addParticle(x, y, color) &#123;</span><br><span class="line">      var particle = new Particle();</span><br><span class="line">      particle.init(x, y, color);</span><br><span class="line">      particles.push(particle);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function updateParticles() &#123;</span><br><span class="line">      </span><br><span class="line">      for( var i = 0; i &lt; particles.length; i++ ) &#123;</span><br><span class="line">        particles[i].update();</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      for( var i = particles.length -1; i &gt;= 0; i-- ) &#123;</span><br><span class="line">        if( particles[i].lifeSpan &lt; 0 ) &#123;</span><br><span class="line">          particles[i].die();</span><br><span class="line">          particles.splice(i, 1);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function loop() &#123;</span><br><span class="line">      requestAnimationFrame(loop);</span><br><span class="line">      updateParticles();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function Particle() &#123;</span><br><span class="line">  </span><br><span class="line">      this.character = &quot;*&quot;;</span><br><span class="line">      this.lifeSpan = 120; //ms</span><br><span class="line">      this.initialStyles =&#123;</span><br><span class="line">        &quot;position&quot;: &quot;fixed&quot;,</span><br><span class="line">        &quot;top&quot;: &quot;0&quot;, //必须加</span><br><span class="line">        &quot;display&quot;: &quot;block&quot;,</span><br><span class="line">        &quot;pointerEvents&quot;: &quot;none&quot;,</span><br><span class="line">        &quot;z-index&quot;: &quot;10000000&quot;,</span><br><span class="line">        &quot;fontSize&quot;: &quot;20px&quot;,</span><br><span class="line">        &quot;will-change&quot;: &quot;transform&quot;</span><br><span class="line">      &#125;;</span><br><span class="line">  </span><br><span class="line">      this.init = function(x, y, color) &#123;</span><br><span class="line">  </span><br><span class="line">        this.velocity = &#123;</span><br><span class="line">          x:  (Math.random() &lt; 0.5 ? -1 : 1) * (Math.random() / 2),</span><br><span class="line">          y: 1</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        this.position = &#123;x: x - 10, y: y - 20&#125;;</span><br><span class="line">        this.initialStyles.color = color;</span><br><span class="line">        console.log(color);</span><br><span class="line">  </span><br><span class="line">        this.element = document.createElement(&#x27;span&#x27;);</span><br><span class="line">        this.element.innerHTML = this.character;</span><br><span class="line">        applyProperties(this.element, this.initialStyles);</span><br><span class="line">        this.update();</span><br><span class="line">        </span><br><span class="line">        document.body.appendChild(this.element);</span><br><span class="line">      &#125;;</span><br><span class="line">      </span><br><span class="line">      this.update = function() &#123;</span><br><span class="line">        this.position.x += this.velocity.x;</span><br><span class="line">        this.position.y += this.velocity.y;</span><br><span class="line">        this.lifeSpan--;</span><br><span class="line">        </span><br><span class="line">        this.element.style.transform = &quot;translate3d(&quot; + this.position.x + &quot;px,&quot; + this.position.y + &quot;px,0) scale(&quot; + (this.lifeSpan / 120) + &quot;)&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      this.die = function() &#123;</span><br><span class="line">        this.element.parentNode.removeChild(this.element);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    function applyProperties( target, properties ) &#123;</span><br><span class="line">      for( var key in properties ) &#123;</span><br><span class="line">        target.style[ key ] = properties[ key ];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    init();</span><br><span class="line">  &#125;)();</span><br><span class="line">  </span><br></pre></td></tr></table></figure>
<p>然后在主题文件夹目录下\layout_layout.njk文件内引入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 樱花特效 --&gt;&#123;% if theme.sakura.enable %&#125;&lt;script async src=&quot;/js/ColorfulCursor.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>修改文件夹配置 _config.yml文件 假如有映射文件则是根目录下_config.next.yml添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 樱花飘落动特效</span><br><span class="line">sakura:enable: true</span><br></pre></td></tr></table></figure>


<h3 id="设置背景样式"><a href="#设置背景样式" class="headerlink" title="设置背景样式"></a>设置背景样式</h3><h4 id="动态背景样式"><a href="#动态背景样式" class="headerlink" title="动态背景样式"></a>动态背景样式</h4><p>在主题文件夹下的 layout 文件夹找到并打开名layout文件，在末尾加上代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 动态背景 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id="动态背景设置"><a href="#动态背景设置" class="headerlink" title="动态背景设置****"></a>动态背景设置****</h4><p>在主题文件夹下的 source&#x2F;css 文件夹，进入 css&#x2F;custom 文件下，用文本形式打开 custom.styl 文件，然后添加下面这段代码。代码中 url 的地址是指到： 主题文件夹&#x2F;source&#x2F;images&#x2F; 。</p>
<h3 id="添加音乐播放器"><a href="#添加音乐播放器" class="headerlink" title="添加音乐播放器"></a>添加音乐播放器</h3><h4 id="插入播放器方法"><a href="#插入播放器方法" class="headerlink" title="插入播放器方法"></a>插入播放器方法</h4><p>这里提供两种便捷方式,第一种方式打开网易云<a href="https://music.163.com/">网页官方</a>,(单曲)打开自己喜欢的歌曲播放界面点击生成外链或创建自己喜欢的歌单拉入非vip的歌曲，打开歌单界面点点击生成外链。选择想要的样式，如下图：<br><img src="/posts/c28eec2f/cloudmusic.jpg" alt="图片"><br>打开主题文件夹下 layout&#x2F;_macro&#x2F;sidebar.njk文件，在div同级位置插入如下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;---&lt;div&gt;复制的代码&lt;/div&gt;---&gt;</span><br><span class="line">&lt;div&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=110 src=&quot;//music.163.com/outchain/player?type=0&amp;id=8425659719&amp;auto=1&amp;height=90&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>第二种方式，在复制出来的链接中找到id(像上面:id&#x3D;8425659719 <code>8425659719</code>就是我的歌单id),执行与第一种方式同样的插入方式<br>打开主题文件夹下 layout&#x2F;_macro&#x2F;sidebar.njk文件，在div同级位置插入如下代码(替换成自己的链接id)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;---&lt;div&gt;复制的代码&lt;/div&gt;---&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;!--网易云音乐插件--&gt;</span><br><span class="line">&lt;!-- require APlayer --&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- require MetingJS--&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">&lt;!--网易云playlist外链地址--&gt;   </span><br><span class="line">&lt;meting-js</span><br><span class="line">    server=&quot;netease&quot;</span><br><span class="line">    type=&quot;playlist&quot; </span><br><span class="line">    id=&quot;8425659719&quot;</span><br><span class="line">    mini=&quot;false&quot;</span><br><span class="line">    fixed=&quot;false&quot;</span><br><span class="line">    list-folded=&quot;true&quot;</span><br><span class="line">    autoplay=&quot;false&quot;</span><br><span class="line">    volume=&quot;0.4&quot;</span><br><span class="line">    theme=&quot;#FADFA3&quot;</span><br><span class="line">    order=&quot;list&quot;</span><br><span class="line">    loop=&quot;all&quot;</span><br><span class="line">    preload=&quot;auto&quot;</span><br><span class="line">    mutex=&quot;true&quot;&gt;</span><br><span class="line">&lt;/meting-js&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>注意：歌单中包含vip删掉后也没用，必须重新创建歌单重新拉取，否则会出现资源加载失败或者div不显示等问题</p>
<h4 id="开启全局配置"><a href="#开启全局配置" class="headerlink" title="开启全局配置"></a>开启全局配置</h4><p>即播放进度不会随着网页的切换而中断，需要进行全局配置。<br>打开source&#x2F;themes&#x2F;hexo-theme-next-8.11.0&#x2F;layout&#x2F;_layout.njk文件，复制以下语句到<head>标签后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--pjax：防止跳转页面音乐暂停--&gt;</span><br><span class="line"> &lt;script src=&quot;https://cdn.jsdelivr.net/npm/pjax@0.2.8/pjax.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>最后改主题配置 打开主题配置文件_config.yml假如有映射则是_config.next.yml,找到 pjax 参数 enable改为true</p>
<h3 id="文章相关功能"><a href="#文章相关功能" class="headerlink" title="文章相关功能"></a>文章相关功能</h3><h4 id="置顶文章"><a href="#置顶文章" class="headerlink" title="置顶文章"></a>置顶文章</h4><p>首先卸载原插件并安装置顶插件,打开根目录文件夹，右键Git Bash分别执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>
<p>在想要置顶的文章日期后面加入<code>top: true</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;--title: Hexo主题美化--&gt;</span><br><span class="line">&lt;--date: 2023-05-18 11:09:52--&gt;</span><br><span class="line">top: true</span><br></pre></td></tr></table></figure>
<p>最后设置置顶标志,打开主题文件夹目录下\layout_macro\post.njk文件，在<code>&lt;div class=“post-meta”&gt;</code>下引入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">    &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class="line">    &lt;font color=&quot;RED&quot;&gt;置顶&lt;/font&gt;</span><br><span class="line">    &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="只显示摘要"><a href="#只显示摘要" class="headerlink" title="只显示摘要"></a>只显示摘要</h4><p>找到主题配置文件_config.yml中的<code>excerpt_description:true</code>改为<code>excerpt_description:false</code></p>
<p>改好配置后，可以利用两种方式在显示摘要：<br>1.在文章日期后面加入<code>description:“摘要内容”</code><br>2.在文章内容需要显示的部分后面加入<code>&lt;!--more--&gt;</code></p>
<h4 id="更改内链文本样式"><a href="#更改内链文本样式" class="headerlink" title="更改内链文本样式"></a>更改内链文本样式</h4><p>打开主题文件夹下的 source&#x2F;css_common&#x2F;components&#x2F;post&#x2F;post.styl 文件，然后在文末加上下面这段代码即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line">  color: #0593d3; //原始链接颜色</span><br><span class="line">  border-bottom: none;</span><br><span class="line">  border-bottom: 1px solid #0593d3; //底部分割线颜色</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    color: #fc6423; //鼠标经过颜色</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    border-bottom: 1px solid #fc6423; //底部分割线颜色</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="显示字数和阅读时间"><a href="#显示字数和阅读时间" class="headerlink" title="显示字数和阅读时间"></a>显示字数和阅读时间</h4><p>安装hexo-word-counter统计文章的字数以及预期阅读时间插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-word-counter</span><br><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>
<p>打开根目录配置_config.yml文件，在文件尾部插入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<p>打开主题配置文件，修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/next-theme/hexo-word-counter</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_total: false</span><br></pre></td></tr></table></figure>

<h4 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h4><ul>
<li>安装hexo-blog-encrypt插件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>
<li>使用方法<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="版权声明"><a href="#版权声明" class="headerlink" title="版权声明"></a>版权声明</h4><p>打开主题配置文件，找到creative_commons:修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sidebar: true</span><br><span class="line">post: true</span><br></pre></td></tr></table></figure>
<p>添加感谢阅读字样，打开 themes&#x2F;next&#x2F;layout&#x2F;_macro 中新建 passage-end-tag.njk 文件,并添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>打开themes\next\layout_macro\post.njk文件，在post-body之后，post-footer 之前添加如下代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &#x27;passage-end-tag.njk&#x27; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>打开主题配置文件，在末尾添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
        <tag>美化</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建笔记</title>
    <url>/posts/bd5b3fbb.html</url>
    <content><![CDATA[<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p>
<ul>
<li><a href="https://nodejs.org/en">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li>
<li><a href="https://nodejs.org/en">Git</a> (git环境配置，详细请看)</li>
</ul>
<span id="more"></span>
<h3 id="进行安装"><a href="#进行安装" class="headerlink" title="进行安装"></a>进行安装</h3><p>在完成Node环境和Git环境的配置后，新建文件夹 CrfBlog并打开，右键 git bash依次输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init </span><br></pre></td></tr></table></figure>

<h2 id="Hexo建站"><a href="#Hexo建站" class="headerlink" title="Hexo建站"></a>Hexo建站</h2><h3 id="加载主题"><a href="#加载主题" class="headerlink" title="加载主题"></a>加载主题</h3><p>在 <a href="https://hexo.io/themes/">Hexo·主题</a>上挑选喜欢的主题，点击主题标题获取地址，打开CrfBlog右键git bash输入指令回车进行克隆，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">指令：$ git clone + 主题github地址 + themes/主题命名(主题命名可自定义)</span><br><span class="line"></span><br><span class="line">$ git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>克隆成功后，打开CrfBlog文件夹下的_config.yml，搜索 theme关键字，把 theme: ~ 里的~替换为你克隆时的主题命名保存即可，如：theme: next</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">该操作完成后进行本地预览：</span><br><span class="line">$ hexo g  //解析成静态网页形式</span><br><span class="line">$ hexo s  //获取 http://localhost:4000/ 地址打开</span><br></pre></td></tr></table></figure>

<p>附：主题配置映射，复制主题文件夹下的_config.yml文件重命名为_config.主题命名.yml，移动到博客根目录即CrfBlog文件夹下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hexo 在合并主题配置时，根目录下的_config.yml 配置项的优先级最高</span><br><span class="line">其次是 _config.[theme].yml 文件，最后是位于主题目录下的 _config.yml 文件。</span><br><span class="line">(！！这里要特别注意复制出来主题配置文件的存放路径和命名)</span><br></pre></td></tr></table></figure>
<p>这样做的好处是不会直接修改到主题文件夹下的_config.yml，在后面进行主题更新时，不会影响到已经修改好的样式</p>
<h3 id="主题升级"><a href="#主题升级" class="headerlink" title="主题升级"></a>主题升级</h3><p>设置新的主题目录，nextUp+日期，如：nextUp231107</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git clone https://github.com/next-theme/hexo-theme-next themes/nextUp231107</span><br></pre></td></tr></table></figure>
<p>跟加载主题一样的操作，复制nextUp231107下的_config.yml到博客根目录即CrfBlog文件夹下,重命名为<code> _config.nextUp231107.yml</code></p>
<p>找到根目录下的配置文件<code>_config.yml</code>搜索关键词<code>theme</code>修改主题为<code>theme: nextUp231107</code></p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>复制主题文件<code>_config.[theme].yml</code>是为了方便升级，同样的道理该文件下会用到<code>images/</code>路径来存放资源文件，这个文件夹是在主题文件夹目录下，因此建议在根目录下也创建个<code>images</code>文件夹备份用到的图片，这样每次升级时就不用怕资源丢失又要重新去找素材了。</p>
<h3 id="必备插件"><a href="#必备插件" class="headerlink" title="必备插件"></a>必备插件</h3><h4 id="生成当前页文章目录"><a href="#生成当前页文章目录" class="headerlink" title="生成当前页文章目录"></a>生成当前页文章目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">安装：</span><br><span class="line">    npm install hexo-toc --save</span><br><span class="line">卸载：</span><br><span class="line">    npm remove hexo-toc --save</span><br></pre></td></tr></table></figure>
<h4 id="本地搜索插件"><a href="#本地搜索插件" class="headerlink" title="本地搜索插件"></a>本地搜索插件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.安装插件，用于生成博客索引数据（在博客根目录下执行下列命令）：</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"></span><br><span class="line">2.编辑站点配置文件_config.yml(不是主题配置文件)，新增以下内容到任意位置：</span><br><span class="line"># 搜索</span><br><span class="line">search:</span><br><span class="line">  path: search.xml //假如xml文件报错可试下 search.json</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br><span class="line"></span><br><span class="line">3.编辑主题配置文件_config.yml(在主题目录下)，启用本地搜索功能：</span><br><span class="line">  找到local_search，把enable: false 改为 enable: true</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Gitee部署"><a href="#Gitee部署" class="headerlink" title="Gitee部署"></a>Gitee部署</h2><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>在<a href="https://gitee.com/">Gitee官网</a>，注册并登陆自己的账号，首先设置个人空间地址 （头像–&gt;设置–&gt;个人资料–&gt;个人空间地址）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://gitee.com/+自定义命名 例如我的：https://gitee.com/Aoce888</span><br></pre></td></tr></table></figure>

<p>然后新建仓库，（头像左边–&gt; +号 –&gt;新建仓库）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这个过程需要填写仓库名称，要求仓库名称与个人空间地址的自定义命名一致，</span><br><span class="line">这点很重要否则后面会出现路径寻址错误。目前不一致的办法还没有找到</span><br><span class="line">最后的初始化仓库，设置模板，选择分支不用管，信息都填完后点创建</span><br></pre></td></tr></table></figure>

<h3 id="设置公钥"><a href="#设置公钥" class="headerlink" title="设置公钥"></a>设置公钥</h3><p>详细请看<a href="d95dc0b0">《Git配置仓库公钥及使用》</a>里的<strong>Git配置仓库公钥</strong>章节</p>
<h3 id="链接仓库"><a href="#链接仓库" class="headerlink" title="链接仓库"></a>链接仓库</h3><p>在绑定公钥后，打开创建的仓库(我的是Aoce888)，打开Aoce888仓库，点击克隆下载 选择SSV复制地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git@gitee.com:Aoce888/Aoce888.git</span><br></pre></td></tr></table></figure>
<p>打开CrfBlog文件夹下的_config.yml,在文件末尾找到deploy处，填入如下内容保存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 你复制的SSV地址（如我的：git@gitee.com:Aoce888/Aoce888.git）</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>进行hexo 上传，第一次上传得打开CrfBlog,右键git bash执行如下指令部署环境安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>完成后，依次进行如下操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g  //解析成静态网页形式</span><br><span class="line">$ hexo d  //部署至仓库</span><br></pre></td></tr></table></figure>



<h3 id="获取预览链接"><a href="#获取预览链接" class="headerlink" title="获取预览链接"></a>获取预览链接</h3><p>打开创建好的仓库，确认为开源仓库，选择-服务-Gitee Pages-强制使用https-更新,成功开启后会显示获取的链接，后面每次<code>hexo d</code>后都要更新一次</p>
<h2 id="Git拉取后初始化"><a href="#Git拉取后初始化" class="headerlink" title="Git拉取后初始化"></a>Git拉取后初始化</h2><p>有时换新电脑，需要从git仓库拉取项目并重新初始化</p>
<p>完成Node环境和Git环境的配置后，拉取原CrfBlog文件并打开，右键 git bash依次输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init </span><br></pre></td></tr></table></figure>

<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><h3 id="主题添加备案水印"><a href="#主题添加备案水印" class="headerlink" title="主题添加备案水印"></a>主题添加备案水印</h3><p>打开域名备案的后台，找到备案主体号，例如我的是：<code>粤ICP备20000717号</code>,获取备案跳转链接,国内备案都会有跳转链接要求，这个可以问客服要,放在下面的<code>gongan_icon_url</code>处,获取到这信息后,具体操作如下：</p>
<p>打开主题复制文件，_config.next.yml,搜索关键词<code>beian</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">beian:</span><br><span class="line">  enable: true</span><br><span class="line">  icp: 粤ICP备20000717号</span><br><span class="line">  # The digit in the num of gongan beian.</span><br><span class="line">  gongan_id:</span><br><span class="line">  # The full num of gongan beian.</span><br><span class="line">  gongan_num:</span><br><span class="line">  # The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span><br><span class="line">  gongan_icon_url: https://beian.miit.gov.cn/</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>个人博客</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
</search>
